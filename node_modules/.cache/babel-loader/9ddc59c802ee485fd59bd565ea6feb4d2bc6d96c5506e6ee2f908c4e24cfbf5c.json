{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    createCustomer: {\n      prepare(fullName, nationalID) {\n        return {\n          payload: {\n            fullName,\n            nationalID,\n            createdAt: new Date().toISOString()\n          }\n        };\n      },\n      reducer(state, action) {\n        state.fullName = action.payload.fullName;\n        state.nationalID = action.payload.nationalID;\n        state.createdAt = action.payload.createdAt;\n      }\n    },\n    updateName(state, action) {\n      state.fullName = action.payload;\n    }\n  }\n});\nexport const {\n  createCustomer,\n  updateName\n} = customerSlice.actions;\nexport default customerSlice.reducer;\n\n/*\nexport default function customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return { ...state, fullName: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: { fullName, nationalID, createdAt: new Date().toISOString() },\n  };\n}\n\nexport function updateName(fullName) {\n  return { type: \"customer/updateName\", payload: fullName };\n}\n*/","map":{"version":3,"names":["createSlice","initialState","fullName","nationalID","createdAt","customerSlice","name","reducers","createCustomer","prepare","payload","Date","toISOString","reducer","state","action","updateName","actions"],"sources":["/Users/miloraddjordjevic95/Desktop/ultimate-react-course-main/15-redux-intro/final/src/features/customers/customerSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\",\n};\n\nconst customerSlice = createSlice({\n  name: \"customer\",\n  initialState,\n  reducers: {\n    createCustomer: {\n      prepare(fullName, nationalID) {\n        return {\n          payload: {\n            fullName,\n            nationalID,\n            createdAt: new Date().toISOString(),\n          },\n        };\n      },\n      reducer(state, action) {\n        state.fullName = action.payload.fullName;\n        state.nationalID = action.payload.nationalID;\n        state.createdAt = action.payload.createdAt;\n      },\n    },\n    updateName(state, action) {\n      state.fullName = action.payload;\n    },\n  },\n});\n\nexport const { createCustomer, updateName } = customerSlice.actions;\n\nexport default customerSlice.reducer;\n\n/*\nexport default function customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return { ...state, fullName: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: { fullName, nationalID, createdAt: new Date().toISOString() },\n  };\n}\n\nexport function updateName(fullName) {\n  return { type: \"customer/updateName\", payload: fullName };\n}\n*/\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACRC,cAAc,EAAE;MACdC,OAAOA,CAACP,QAAQ,EAAEC,UAAU,EAAE;QAC5B,OAAO;UACLO,OAAO,EAAE;YACPR,QAAQ;YACRC,UAAU;YACVC,SAAS,EAAE,IAAIO,IAAI,EAAE,CAACC,WAAW;UACnC;QACF,CAAC;MACH,CAAC;MACDC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrBD,KAAK,CAACZ,QAAQ,GAAGa,MAAM,CAACL,OAAO,CAACR,QAAQ;QACxCY,KAAK,CAACX,UAAU,GAAGY,MAAM,CAACL,OAAO,CAACP,UAAU;QAC5CW,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACL,OAAO,CAACN,SAAS;MAC5C;IACF,CAAC;IACDY,UAAUA,CAACF,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACZ,QAAQ,GAAGa,MAAM,CAACL,OAAO;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,cAAc;EAAEQ;AAAW,CAAC,GAAGX,aAAa,CAACY,OAAO;AAEnE,eAAeZ,aAAa,CAACQ,OAAO;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}